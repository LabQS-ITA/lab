#!/usr/bin/env bash
set -euo pipefail


export HTTPD_HOST=172.1.1.200

export CERTBOT_HOST=172.1.9.200

export LOCUST_HOST=172.1.10.200

export POSTGRES_HOST=172.1.2.200
export POSTGRES_HOST01=172.1.2.201
export POSTGRES_HOST02=172.1.2.202

export ADMINER_HOST=172.1.3.200

export GITEA_HOST=172.1.5.200

export DRONE_HOST=172.1.6.200
export DRONE_RUNNER_HOST01=172.1.6.201
export DRONE_RUNNER_HOST02=172.1.6.202
export DRONE_RUNNER_HOST03=172.1.6.203
export DRONE_RUNNER_HOST04=172.1.6.204

export COMMANDER_HOST=172.1.7.200
export REDIS_HOST01=172.1.7.201
export REDIS_HOST02=172.1.7.202

export MONGODB_HOST=172.1.8.200
export MONGODB_HOST01=172.1.8.201
export MONGODB_HOST02=172.1.8.202

export MARIADB_HOST01=172.1.9.201
export MARIADB_HOST02=172.1.9.202

export PHP_HOST=172.1.11.200

export NEXTCLOUD_HOST=172.1.12.200


# cd ../certbot
# echo '* Letsencrypt certbot *'

# echo 'Certificar que apache está parado'
# docker stop httpd

# echo 'Registrando '${CERT_DOMAINS}
# docker-compose -f stack.yaml -f ../common/use.yaml up --detach



# Servidor do lab
# export LAB_DOMAIN=test.labqs.ita.br
# export CI_LAB_DOMAIN=ci.test.labqs.ita.br

# Servidores de desenvolvimento e testes
export LAB_DOMAIN=dev.labqs.ita.br
export CI_LAB_DOMAIN=ci.labqs.ita.br

export CERT_DOMAINS=$LAB_DOMAIN,$CI_LAB_DOMAIN


cd ../httpd
echo '* Apache HTTPD *'

# echo 'Certificar que certbot está parado'
# docker stop certbot

echo "Registrar apache com domínios $(tput setaf 1)"$CERT_DOMAINS"$(tput sgr0)"

sed -i 's/@LAB_DOMAIN/'$LAB_DOMAIN'/g' panel/config/sites/000-default.conf
sed -i 's/@CI_LAB_DOMAIN/'$CI_LAB_DOMAIN'/g' panel/config/sites/001-ci.conf

sed -i 's/@CI_LAB_DOMAIN/'$CI_LAB_DOMAIN'/g' panel/static/index.html

docker-compose -f stack.yaml -f ../common/use.yaml up --detach --remove-orphans
docker restart httpd

# cd ../locust
# echo '* Locust *'

# docker-compose -f stack.yaml -f ../common/use.yaml up --scale worker=2 --detach


# cd ../postgresql
# echo '* PostgreSQL *'

# echo 'SVC_PWD='$(openssl rand -hex 8) > .env
# echo 'SVC_PWD_01='$(openssl rand -hex 8) >> .env
# echo 'SVC_PWD_02='$(openssl rand -hex 8) >> .env

# docker-compose -f stack.yaml -f ../common/use.yaml up --detach


# cd ../mongodb
# echo '* MongoDB *'

# echo 'SVC_PWD='$(openssl rand -hex 8) > .env
# echo 'SVC_PWD_01='$(openssl rand -hex 8) >> .env
# echo 'SVC_PWD_02='$(openssl rand -hex 8) >> .env

# docker-compose -f stack.yaml -f ../common/use.yaml up --detach


cd ../mariadb
echo '* MariaDB *'

echo 'SVC_PWD_01='$(openssl rand -hex 8) > .env
echo 'SVC_PWD_02='$(openssl rand -hex 8) >> .env

docker-compose -f stack.yaml -f ../common/use.yaml up --detach


# cd ../redis
# echo '* Redis *'

# echo 'SVC_PWD_01='$(openssl rand -hex 8) > .env
# echo 'SVC_PWD_02='$(openssl rand -hex 8) >> .env

# docker-compose -f stack.yaml -f ../common/use.yaml up --detach


# cd ../adminer
# echo '* Adminer *'

# docker-compose -f stack.yaml -f ../common/use.yaml up --detach


cd ../nextcloud
echo '* Nextcloud *'

echo 'SVC_PWD='$(openssl rand -hex 8) > .env
echo 'POSTGRES_PWD='$(awk -F'=' '$1 =="SVC_PWD" {print $2}' ../postgresql/.env) >> .env

docker-compose -f stack.yaml -f ../common/use.yaml up --detach


# cd ../gitea
# echo '* Gitea *'

# echo 'Navegar até a página de configuração do serviço http://$LAB_DOMAIN/git'
# echo 'e definir a conta do administrador (no final da página, em "Optional Settings")'

# echo 'POSTGRES_PWD='$(awk -F'=' '$1 =="SVC_PWD" {print $2}' ../postgresql/.env) > .env

# docker-compose -f stack.yaml -f ../common/use.yaml up --detach


# cd ../drone
# echo '* Drone *'

# echo 'Gere uma aplicação OAuth no Gitea para o Drone em http://$LAB_DOMAIN/git'
# echo 'Após gerar a aplicação informe os dados abaixo'
# read -p 'Informe o "Client ID": ' GID
# read -p 'Informe o "Client Secret": ' GSCRT

# echo 'DRONE_TOKEN='$(openssl rand -hex 32) > .env
# echo 'POSTGRES_PWD='$(awk -F'=' '$1 =="SVC_PWD" {print $2}' ../postgresql/.env) >> .env
# echo 'GITEA_ID='$GID >> .env
# echo 'GITEA_PWD='$GSCRT >> .env
# echo 'SVC_PWD='$(openssl rand -hex 16) >> .env

# docker-compose -f stack.yaml -f ../common/use.yaml up --scale docker=2 --scale ssh=2 --detach --remove-orphans
