#!/usr/bin/env bash
set -euo pipefail

if [[ $# -ne 1 && $# -ne 2 ]]; then

    echo "Informe [ ia ]"

    exit 1

elif [ "$1" == "ia" ]; then

    # Servidor do lab
    export LAB_DOMAIN=ia.labqs.ita.br
    
else

    echo "Argumento $1 incorreto. Use [ ia ]"

    exit 1

fi

CONFIG_ENV="N"

if [ $# -eq 2 ]; then
    if [ "$2" == "config" ]; then
        echo "$(tput setaf 1)Configurando ambientes$(tput sgr0)"
        read -p "Confirme [S/N]: " -n1 CONFIG_OPT
        CONFIG_OPT=${CONFIG_OPT:-N}
        if [[ $CONFIG_OPT =~ ^[Ss]$ ]]; then
            echo '\nTodos os ambientes serão configurados'
            CONFIG_ENV="Y"
        fi
    else

        echo "Argumento $2 incorreto. Use [ config ]"

        exit 2
        
    fi

else

    echo "$(tput setaf 1)Atualizando ambientes sem reconfigurar$(tput sgr0)"

fi

source ./config

echo "Registrar domínios $(tput setaf 1)"$LAB_DOMAIN"$(tput sgr0)"

sed -i 's/@LAB_DOMAIN/'$LAB_DOMAIN'/g' ../httpd/panel/static/index.html


cd ../httpd
echo '* Apache HTTPD *'

if [ $1 == "hom" ]; then

    echo "Desabilitar proxy para "$CI_LAB_DOMAIN" e "$CM_LAB_DOMAIN

    rm panel/config/sites/001-ci.conf || true
    rm panel/config/sites/002-cm.conf || true

fi

if [ "$1" == "ia" ]; then

    # Servidor do lab
    sed -i 's/@LAB_SERVICE/Teste/g' ../httpd/panel/static/index.html
    
fi

echo 'Certificar que certbot está parado'
docker stop certbot || true

docker compose -f stack.yaml -f ../common/volumes.$1.yaml up --detach

docker stop httpd
docker start httpd

if [ $1 == "ia" ]; then

    cd ../portainer
    echo '* Portainer *'

    docker compose -f agent.yaml up  --detach


    cd ../jupyter
    echo '* Jupyter Notebook *'

    if [ $CONFIG_ENV == 'Y' ]; then
        echo 'SVC_PWD='$(openssl rand -hex 8) > .env
        echo 'SVC_DEV_PWD='$(openssl rand -hex 8) >> .env
    fi

    docker build --tag labqs/jupyterlab --file Dockerfile.jupyterlab --rm .
    docker compose -f stack.yaml -f ../common/volumes.$1.yaml up --build --detach jupyterhub
    
fi
