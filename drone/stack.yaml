services:

  drone:
    container_name: drone
    image: drone/drone
    restart: unless-stopped
    ports:
      - '8082:80'
    networks:
      netlab01:
        ipv4_address: ${DRONE_HOST}
    volumes:
      - dronedata:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_DATADOG_ENABLED=false
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://drone:${POSTGRES_PWD}@postgres:5432/drone?sslmode=disable
      - DRONE_SERVER_HOST=${DRONE_HOST}
      - DRONE_SERVER_PROTO=http
      - DRONE_GITEA_SERVER=http://test.labqs.ita.br/git
      - DRONE_GITEA_CLIENT_ID=${GITEA_ID}
      - DRONE_GITEA_CLIENT_SECRET=${GITEA_PWD}
      - DRONE_RPC_SECRET=${SVC_PWD}
      - DRONE_USER_CREATE=username:maint,machine:false,admin:true,token:${DRONE_TOKEN},

  dronerunner01:
    container_name: dronerunner01
    image: drone/drone-runner-docker
    restart: unless-stopped
    ports:
      - '9021:3000'
    networks:
      netlab01:
        ipv4_address: ${DRONE_RUNNER_HOST01}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${SVC_PWD}
      - DRONE_RUNNER_NAME=dronerunner01
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=netlab01
      - DRONE_DEBUG=false
      - DRONE_TRACE=false
    depends_on:
      - 'drone'

  dronerunner02:
    container_name: dronerunner02
    image: drone/drone-runner-docker
    restart: unless-stopped
    ports:
      - '9022:3000'
    networks:
      netlab01:
        ipv4_address: ${DRONE_RUNNER_HOST02}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${SVC_PWD}
      - DRONE_RUNNER_NAME=dronerunner02
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=netlab01
      - DRONE_DEBUG=false
      - DRONE_TRACE=false
    depends_on:
      - 'drone'

  dronerunner03:
    container_name: dronerunner03
    image: drone/drone-runner-ssh
    restart: unless-stopped
    ports:
      - '9011:3000'
    networks:
      netlab01:
        ipv4_address: ${DRONE_RUNNER_HOST03}
    environment:
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${SVC_PWD}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=netlab01
      - DRONE_RUNNER_NAME=dronerunner03
    depends_on:
      - 'drone'

  dronerunner04:
    container_name: dronerunner04
    image: drone/drone-runner-ssh
    restart: unless-stopped
    ports:
      - '9012:3000'
    networks:
      netlab01:
        ipv4_address: ${DRONE_RUNNER_HOST04}
    environment:
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_SECRET=${SVC_PWD}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=netlab01
      - DRONE_RUNNER_NAME=dronerunner04
    depends_on:
      - 'drone'

volumes:
  dronedata:
    name: dronedata
    driver: local
