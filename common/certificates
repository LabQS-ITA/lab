#!/usr/bin/env bash
set -euo pipefail


if [[ $# -ne 1 ]]; then

    echo "Informe [ dev | tst | hom ]"

    exit 1

elif [ "$1" == "tst" ]; then

    # Servidor do lab
    export LAB_DOMAIN=test.labqs.ita.br
    export CI_LAB_DOMAIN=ci.test.labqs.ita.br
    export CM_LAB_DOMAIN=cm.test.labqs.ita.br

elif [ "$1" == "dev" ]; then

    # Servidores de desenvolvimento e testes
    export LAB_DOMAIN=dev.labqs.ita.br
    export CI_LAB_DOMAIN=ci.labqs.ita.br
    export CM_LAB_DOMAIN=cm.labqs.ita.br

elif [ "$1" == "hom" ]; then

    # Servidores de homologação
    export LAB_DOMAIN=labqs.ita.br
    export CI_LAB_DOMAIN=ci.labqs.ita.br
    export CM_LAB_DOMAIN=cm.labqs.ita.br
    
else

    echo "Argumento $1 incorreto. Use [ dev | tst | hom ]"

    exit 1

fi

source ./config

cd ../certbot
echo '* Letsencrypt certbot *'

echo 'Certificar que apache está parado'
docker stop httpd

export CERT_DOMAINS=$LAB_DOMAIN,$CI_LAB_DOMAIN,$CM_LAB_DOMAIN
echo 'Registrando '${CERT_DOMAINS}

# Usando docker
docker-compose -f stack.yaml -f ../common/use.yaml up --detach

# Usando letsencrypt
# sudo certbot certonly --standalone --agree-tos -m gomesjm@ita.br -n -d ${CERT_DOMAINS}
